<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.common.mapper.UserMapper">

    <!-- 基础结果映射 -->
    <resultMap id="BaseResultMap" type="com.common.core.entity.SysUser">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="nickname" property="nickname" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="avatar" property="avatar" jdbcType="VARCHAR"/>
        <result column="gender" property="gender" jdbcType="TINYINT"/>
        <result column="birthday" property="birthday" jdbcType="DATE"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP"/>
        <result column="last_login_ip" property="lastLoginIp" jdbcType="VARCHAR"/>
        <result column="login_count" property="loginCount" jdbcType="INTEGER"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="create_by" property="createBy" jdbcType="BIGINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_by" property="updateBy" jdbcType="BIGINT"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="is_deleted" property="deleted" jdbcType="TINYINT"/>
    </resultMap>

    <!-- 基础字段列表 -->
    <sql id="Base_Column_List">
        id, username, nickname, email, phone, avatar, gender, birthday, status,
        password, last_login_time, last_login_ip, login_count, remark,
        create_by, create_time, update_by, update_time, is_deleted
    </sql>

    <!-- 根据用户名查询用户 -->
    <select id="selectByUsername" parameterType="string" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM sys_user
        WHERE username = #{username} AND is_deleted = 0
    </select>

    <!-- 根据邮箱查询用户 -->
    <select id="selectByEmail" parameterType="string" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM sys_user
        WHERE email = #{email} AND is_deleted = 0
    </select>

    <!-- 根据手机号查询用户 -->
    <select id="selectByPhone" parameterType="string" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM sys_user
        WHERE phone = #{phone} AND is_deleted = 0
    </select>

    <!-- 检查用户名是否存在 -->
    <select id="existsByUsername" resultType="boolean">
        SELECT COUNT(1) > 0
        FROM sys_user
        WHERE username = #{username} AND is_deleted = 0
        <if test="excludeId != null">
            AND id != #{excludeId}
        </if>
    </select>

    <!-- 检查邮箱是否存在 -->
    <select id="existsByEmail" resultType="boolean">
        SELECT COUNT(1) > 0
        FROM sys_user
        WHERE email = #{email} AND is_deleted = 0
        <if test="excludeId != null">
            AND id != #{excludeId}
        </if>
    </select>

    <!-- 检查手机号是否存在 -->
    <select id="existsByPhone" resultType="boolean">
        SELECT COUNT(1) > 0
        FROM sys_user
        WHERE phone = #{phone} AND is_deleted = 0
        <if test="excludeId != null">
            AND id != #{excludeId}
        </if>
    </select>

    <!-- 分页查询用户列表 -->
    <select id="selectUserPage" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM sys_user
        WHERE is_deleted = 0
        <if test="query.username != null and query.username != ''">
            AND username LIKE CONCAT('%', #{query.username}, '%')
        </if>
        <if test="query.nickname != null and query.nickname != ''">
            AND nickname LIKE CONCAT('%', #{query.nickname}, '%')
        </if>
        <if test="query.email != null and query.email != ''">
            AND email LIKE CONCAT('%', #{query.email}, '%')
        </if>
        <if test="query.phone != null and query.phone != ''">
            AND phone LIKE CONCAT('%', #{query.phone}, '%')
        </if>
        <if test="query.status != null">
            AND status = #{query.status}
        </if>
        <if test="query.gender != null">
            AND gender = #{query.gender}
        </if>
        <if test="query.startTime != null">
            AND create_time >= #{query.startTime}
        </if>
        <if test="query.endTime != null">
            AND create_time &lt;= #{query.endTime}
        </if>
        ORDER BY create_time DESC
    </select>

    <!-- 查询用户详细信息 -->
    <select id="selectUserDetailById" parameterType="long" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM sys_user
        WHERE id = #{userId} AND is_deleted = 0
    </select>

    <!-- 更新用户最后登录时间和IP -->
    <update id="updateLastLogin">
        UPDATE sys_user
        SET last_login_time = NOW(),
            last_login_ip = #{loginIp},
            login_count = login_count + 1,
            update_time = NOW()
        WHERE id = #{userId} AND is_deleted = 0
    </update>

    <!-- 批量更新用户状态 -->
    <update id="batchUpdateStatus">
        UPDATE sys_user
        SET status = #{status},
            update_by = #{updateBy},
            update_time = NOW()
        WHERE is_deleted = 0
        AND id IN
        <foreach collection="userIds" item="userId" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </update>

    <!-- 重置密码 -->
    <update id="resetPassword">
        UPDATE sys_user
        SET password = #{password},
            update_by = #{updateBy},
            update_time = NOW()
        WHERE id = #{userId} AND is_deleted = 0
    </update>

</mapper> 