name: Dependency Update & Security Check

on:
  schedule:
    # 每周一早上8点检查依赖更新
    - cron: '0 8 * * 1'
  workflow_dispatch: # 允许手动触发

jobs:
  dependency-update:
    runs-on: ubuntu-latest
    name: Check for Dependency Updates
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Check for dependency updates
        run: |
          cd common-admin-parent
          mvn versions:display-dependency-updates > dependency-updates.txt
          mvn versions:display-plugin-updates >> dependency-updates.txt

      - name: Run security vulnerability check
        run: |
          cd common-admin-parent
          mvn dependency-check:check
        continue-on-error: true

      - name: Create Issue for Updates
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = './common-admin-parent/dependency-updates.txt';
            
            if (fs.existsSync(path)) {
              const content = fs.readFileSync(path, 'utf8');
              
              // 检查是否有更新
              if (content.includes('->')) {
                const issueTitle = `📦 Weekly Dependency Updates - ${new Date().toISOString().split('T')[0]}`;
                const issueBody = `
            ## 🔍 依赖更新检查报告
            
            **检查时间**: ${new Date().toLocaleString('zh-CN')}
            
            ### 📋 检查结果
            
            \`\`\`
            ${content}
            \`\`\`
            
            ### 🔧 建议操作
            
            1. 审查上述依赖更新
            2. 测试兼容性
            3. 逐步更新依赖版本
            4. 运行完整测试套件
            
            ### 📚 更新命令参考
            
            \`\`\`bash
            # 更新到最新release版本
            mvn versions:use-latest-releases
            
            # 更新到最新版本（包括快照）
            mvn versions:use-latest-versions
            
            # 更新特定依赖
            mvn versions:use-latest-versions -Dincludes=groupId:artifactId
            \`\`\`
            
            ---
            *此Issue由GitHub Actions自动创建*
                `;
                
                // 检查是否已有类似的Issue
                const { data: issues } = await github.rest.issues.listForRepo({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  state: 'open',
                  labels: 'dependencies'
                });
                
                const existingIssue = issues.find(issue => 
                  issue.title.includes('Weekly Dependency Updates') && 
                  issue.title.includes(new Date().toISOString().split('T')[0])
                );
                
                if (!existingIssue) {
                  await github.rest.issues.create({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    title: issueTitle,
                    body: issueBody,
                    labels: ['dependencies', 'maintenance']
                  });
                }
              }
            }

      - name: Upload dependency check report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: dependency-reports
          path: |
            common-admin-parent/dependency-updates.txt
            common-admin-parent/target/dependency-check-report.html
          retention-days: 30

  security-advisory:
    runs-on: ubuntu-latest
    name: Security Advisory Check
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run GitHub Security Advisory Check
        run: |
          # 使用GitHub CLI检查安全建议
          gh api graphql -f query='
            query($owner: String!, $repo: String!) {
              repository(owner: $owner, name: $repo) {
                vulnerabilityAlerts(first: 20) {
                  nodes {
                    createdAt
                    securityVulnerability {
                      advisory {
                        summary
                        description
                        severity
                      }
                    }
                  }
                }
              }
            }' -f owner='${{ github.repository_owner }}' -f repo='${{ github.event.repository.name }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true 