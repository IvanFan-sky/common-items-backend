# 生产环境配置
server:
  port: 8080
  servlet:
    context-path: /api
  # 生产环境开启压缩
  compression:
    enabled: true
    min-response-size: 1024

spring:
  # 数据源配置
  datasource:
    druid:
      url: jdbc:mysql://mysql:3306/common_admin?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
      username: ${DB_USERNAME:root}
      password: ${DB_PASSWORD}
      # 生产环境关闭SQL监控页面
      stat-view-servlet:
        enabled: false
      # 生产环境连接池配置优化
      initial-size: 5
      min-idle: 5
      max-active: 50
      max-wait: 60000
      
  # Redis配置
  data:
    redis:
      host: ${REDIS_HOST:redis}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD}
      database: 0
      timeout: 10s
      lettuce:
        pool:
          max-active: 100
          max-wait: -1ms
          max-idle: 8
          min-idle: 0

  # 邮件配置(生产环境)
  mail:
    host: ${MAIL_HOST:smtp.qq.com}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    port: ${MAIL_PORT:587}

# 日志配置
logging:
  level:
    com.common: info
    root: warn
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"
  file:
    name: /app/logs/common-admin.log
  logback:
    rollingpolicy:
      max-file-size: 100MB
      max-history: 30
      total-size-cap: 10GB

# Sa-Token配置(生产环境)
sa-token:
  # 生产环境较长的超时时间
  timeout: 2592000
  # 生产环境关闭日志
  is-log: false
  # 使用更安全的token风格
  token-style: uuid
  # 生产环境JWT密钥从环境变量获取
  jwt-secret-key: ${JWT_SECRET_KEY}

# Knife4j配置(生产环境)
knife4j:
  # 生产环境关闭接口文档
  enable: false

# 系统配置(生产环境)
common:
  # 生产环境文件上传路径
  upload-path: /app/upload/
  avatar-path: /app/avatar/
  # 生产环境开启验证码
  captcha-enabled: true
  # 生产环境配置
  dev-mode: false
  # 生产环境允许的跨域源
  cors-origins: 
    - ${CORS_ORIGIN_1}
    - ${CORS_ORIGIN_2}

# 监控配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  prometheus:
    metrics:
      export:
        enabled: true 